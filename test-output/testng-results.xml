<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-03T22:07:15 IST" name="Suite" finished-at="2024-11-03T22:08:03 IST" duration-ms="47371">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidation.LoginErrorValidation()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" name="LoginErrorValidation" class="rahulshettyacademy.ErrorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="StandAloneTest.submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" name="submitOrder" class="rahulshettyacademy.StandAloneTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-11-03T22:07:15 IST" name="Error Validations Test" finished-at="2024-11-03T22:07:53 IST" duration-ms="37965">
      <class name="rahulshettyacademy.ErrorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:15 IST" name="launchApplication" finished-at="2024-11-03T22:07:21 IST" duration-ms="6060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidation()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:21 IST" name="LoginErrorValidation" finished-at="2024-11-03T22:07:22 IST" duration-ms="387" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [IncorrectEmail or Password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [IncorrectEmail or Password]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at rahulshettyacademy.ErrorValidation.LoginErrorValidation(ErrorValidation.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:22 IST" name="tearDown" finished-at="2024-11-03T22:07:22 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:22 IST" name="launchApplication" finished-at="2024-11-03T22:07:27 IST" duration-ms="5197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidation()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:27 IST" name="LoginErrorValidation" finished-at="2024-11-03T22:07:28 IST" duration-ms="385" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [IncorrectEmail or Password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [IncorrectEmail or Password]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at rahulshettyacademy.ErrorValidation.LoginErrorValidation(ErrorValidation.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:28 IST" name="tearDown" finished-at="2024-11-03T22:07:28 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:28 IST" name="launchApplication" finished-at="2024-11-03T22:07:29 IST" duration-ms="1321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidation()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:29 IST" name="ProductErrorValidation" finished-at="2024-11-03T22:07:53 IST" duration-ms="23457" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at rahulshettyacademy.ErrorValidation.ProductErrorValidation(ErrorValidation.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.ErrorValidation@7ca20101]" started-at="2024-11-03T22:07:53 IST" name="tearDown" finished-at="2024-11-03T22:07:53 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.ErrorValidation -->
    </test> <!-- Error Validations Test -->
    <test started-at="2024-11-03T22:07:15 IST" name="StandAlone Test" finished-at="2024-11-03T22:08:03 IST" duration-ms="47371">
      <class name="rahulshettyacademy.StandAloneTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:16 IST" name="launchApplication" finished-at="2024-11-03T22:07:20 IST" duration-ms="4830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:20 IST" name="submitOrder" data-provider="getData" finished-at="2024-11-03T22:07:35 IST" duration-ms="14384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Manuson7@, product=ZARA COAT 3, email=rahulshettyacademy1234@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:35 IST" name="tearDown" finished-at="2024-11-03T22:07:35 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:35 IST" name="launchApplication" finished-at="2024-11-03T22:07:36 IST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:36 IST" name="submitOrder" data-provider="getData" finished-at="2024-11-03T22:07:51 IST" duration-ms="14304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ZARA COAT 3, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:51 IST" name="tearDown" finished-at="2024-11-03T22:07:51 IST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:51 IST" name="launchApplication" finished-at="2024-11-03T22:07:52 IST" duration-ms="1218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="seeOrderHistory()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:07:52 IST" name="seeOrderHistory" finished-at="2024-11-03T22:08:03 IST" depends-on-methods="rahulshettyacademy.StandAloneTest.submitOrder" duration-ms="10551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeOrderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.StandAloneTest@4c1f22f3]" started-at="2024-11-03T22:08:03 IST" name="tearDown" finished-at="2024-11-03T22:08:03 IST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.StandAloneTest -->
    </test> <!-- StandAlone Test -->
  </suite> <!-- Suite -->
</testng-results>
